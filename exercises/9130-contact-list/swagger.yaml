openapi: 3.0.0
info:
  description: HTL Programming Homework
  version: 1.0.0
  title: Address Book
paths:
  /contacts:
    get:
      summary: Get all people in contact list
      operationId: getAllPeople
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
    post:
      summary: Adds a new person to the list of contacts
      operationId: addPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        description: Person to add
        required: true
      responses:
        "201":
          description: Person successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
          headers:
            Location:
              description: URL where to get details of the created event
              schema:
                type: string
        "400":
          description: Invalid input (e.g. required field missing or empty)
  "/contacts/{personId}":
    delete:
      summary: Deletes a person from the list of contacts
      operationId: deletePerson
      parameters:
        - name: personId
          in: path
          description: ID of person to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Person not found
  /contacts/findByName:
    get:
      summary: Finds person in contact list by name
      description: Returns all people whose first of last name contains the specified name filter
      operationId: findPersonByName
      parameters:
        - name: nameFilter
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
        "400":
          description: Invalid or missing name
components:
  schemas:
    Person:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string